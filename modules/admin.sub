#!/usr/bin/perl

use strict;
use CONFIG;
use TRANSLATE;

use WWW::Mechanize;
#use SN;
    
my $q = $main::q;
my $t = $main::t;
my $tt = $main::tt;
my $db = $main::db;
my $template = Template->new($CONFIG_TEMPLATE);
my $output = '';
my $r;


my $rules =

{
    '/admin' => sub {
	$template->process('admin/index.tpl', { %$tt }, \$output );
	return $output;
    },

    '/admin/lang_base' => sub {
	die unless ( $tt->{access}{can_edit_content} );
	my $lang_file = $main::CONFIG->{config_path}.'/lang/en.pl';
	my $ref = eval { local $SIG{__DIE__}; do $lang_file };
	$output .= $_.' => '.$t->t($_).'<br>' foreach sort keys %$ref;
	return $output;
    },

    '/admin/lang_check' => sub {
	die unless ( $tt->{access}{can_edit_content} );
	my $res;
	my %words;
	$db->sql("DELETE from ships_lang where ship_id>3000 AND lang!='en' AND lang!=? AND (ship_name='' OR ship_description='');", $main::CONFIG->{default_language});
	foreach my $lang ( @{$main::CONFIG->{languages}} ) {
	    my $ref = eval { local $SIG{__DIE__}; do $main::CONFIG->{config_path}.'/lang/'.$lang.'.pl' };
	    $words{$_} = 1 foreach keys %$ref;
	}
	foreach my $lang ( @{$main::CONFIG->{languages}} ) {
	    my %translate;
	    my $t = TRANSLATE->new($lang);
	    $res .= "$lang<br />";
	    foreach ( keys %words ) {
		next if /^\ ?$/;
#		$res .= "$_<br >" if !$t->{words}{$_} || $t->{words}{$_} eq $_ || $t->{words}{$_} =~ /^\ ?$/;
#		$translate{$_}=1 if !$t->{words}{$_} || $t->{words}{$_} eq $_ || $t->{words}{$_} =~ /^\ ?$/;
		$translate{$_}=1 if !$t->{words}{$_} || $t->{words}{$_} =~ /^\ ?$/;
	    }
	    if ($lang eq 'en') {
		$t->{'words'}{$_}=' ' foreach keys %translate;
		$t->save_lang;
		next;
	    }
	    foreach my $i (1..5) {
		my $th = $t->translate_hash($lang, \%translate);
		next unless $th;
		%translate = %{$th};
		last;
	    }
	    $res .= join "<br>", (values %translate);
	    $t->{'words'}{$_}=$translate{$_} foreach keys %translate;
	    $t->save_lang;
	}

	foreach my $to ( @{$main::CONFIG->{languages}} ) {
#try
#	    next if $to eq 'en';
	    my $r=0;
	    foreach my $i (1..5) {
		$r = $t->lang_checking ( { table=>'base_news', id=>'news_key', id_main=>'news_id', lang_from=>'en', lang_to=>$to, dnd=>['news_date', ] } );
		last if $r;
	    }
	    $res .= $r;
	    foreach my $i (1..5) {
		$r = $t->lang_checking ( { table=>'base_content', id=>'content_page', id_main=>'content_id', lang_from=>'en', lang_to=>$to, dnd=>['user_id', 'content_date_from', 'content_place', ] } );
		last if $r;
	    }
	    $res .= $r;
	}
=c
	#gets from wiki lang
	foreach my $lang ( @{$main::CONFIG->{languages}} ) {
	    my $tr = TRANSLATE->new($lang);
	    my $lang_file = $main::CONFIG->{modules_path}.'/lang/wiki_translate/result/'.$lang.'.pl';
	    next unless ( -f $lang_file );
	    $res .= "$lang_file: ";
	    my $ref = eval { local $SIG{__DIE__}; do $lang_file };
	    if ( ref($ref) eq 'HASH' ) {
		$res .= " found ".((keys %$ref)+0)." new keys<br>";
		$tr->{'words'} = { %{$tr->{'words'}}, %$ref };
	    }
	    $tr->save_lang;
	}
=cut
	return $res;
    },

    '/admin/content_modify' => sub {
	die unless ( $tt->{access}{can_edit_content} );
	my $body = $q->param('body');
	my $lang = $q->param('lang');
	my $page = $q->param('page');
	my $pageheader = $q->param('pageheader');
	$t->{'no_lang_cache'} = ($q->param('no_lang_cache') eq '1')? 1 : 0;

	## if current language isn't default one, then update only one page
	if ( $lang ne $CONFIG->{default_language} ) {
	    $db->sql( "DELETE FROM base_content WHERE content_page=? AND lang=?", $page, $lang );
	    if ( $body ) {
		$db->sql("INSERT INTO base_content (content_date_from, content_page, lang, content_body, content_title) 
			VALUES (NOW(), ?, ?, ?, ?)", $page, $lang, $body, $pageheader);
	    }
	    back();
	    die;
	}

	## deleting all pages except languages_don't_translate
	my $x = '?,' x (keys %{$CONFIG->{languages_dont_translate}});
	$x =~ s/.$//;
	$x = "''" unless $x;
	$db->sql( "DELETE FROM base_content WHERE content_page=? AND lang NOT IN ($x)", 
		    $page, keys %{$CONFIG->{languages_dont_translate}} );
	if ( $body ) {
	    $db->sql("INSERT INTO base_content (content_date_from, content_page, lang, content_body, content_title) 
		    VALUES (NOW(), ?, ?, ?, ?)", $page, $lang, $body, $pageheader);
	}

	$t->email_to_lang_owners($page);

	foreach my $to ( @{$CONFIG->{languages}} ) {
	    next if $to eq $CONFIG->{default_language};
	    next if grep {$_ eq $to} keys %{$CONFIG->{languages_dont_translate}};
	    $t->lang_checking ( { table=>'base_content', id=>'content_page', id_main=>'content_id', 
		lang_from=>$CONFIG->{default_language}, lang_to=>$to, 
		dnd=>['user_id', 'content_date_from', 'content_place', ] } );
	}
	
	back();
    },

};
